<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="验布后台" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="验布大盘" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1490516197000</longProp>
        <longProp name="ThreadGroup.end_time">1490516197000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="预发---------------环境变量" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="weburl" elementType="Argument">
              <stringProp name="Argument.name">weburl</stringProp>
              <stringProp name="Argument.value">www.lian-shang.cn</stringProp>
              <stringProp name="Argument.desc">预发官网地址</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="webport" elementType="Argument">
              <stringProp name="Argument.name">webport</stringProp>
              <stringProp name="Argument.value">443</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="http" elementType="Argument">
              <stringProp name="Argument.name">http</stringProp>
              <stringProp name="Argument.value">https</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssourl" elementType="Argument">
              <stringProp name="Argument.name">ssourl</stringProp>
              <stringProp name="Argument.value">sso.lian-shang.cn</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssoport" elementType="Argument">
              <stringProp name="Argument.name">ssoport</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssohttp" elementType="Argument">
              <stringProp name="Argument.name">ssohttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingurl" elementType="Argument">
              <stringProp name="Argument.name">yunyingurl</stringProp>
              <stringProp name="Argument.value">bossadmin.lian-shang.cn</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingport" elementType="Argument">
              <stringProp name="Argument.name">yunyingport</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyinghttp" elementType="Argument">
              <stringProp name="Argument.name">yunyinghttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuurl" elementType="Argument">
              <stringProp name="Argument.name">caiwuurl</stringProp>
              <stringProp name="Argument.value">finadmin.lian-shang.cn</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuport" elementType="Argument">
              <stringProp name="Argument.name">caiwuport</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuhttp" elementType="Argument">
              <stringProp name="Argument.name">caiwuhttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuurl" elementType="Argument">
              <stringProp name="Argument.name">xuqiuurl</stringProp>
              <stringProp name="Argument.value">mtfadmin.lian-shang.cn</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuport" elementType="Argument">
              <stringProp name="Argument.name">xuqiuport</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuhttp" elementType="Argument">
              <stringProp name="Argument.name">xuqiuhttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingticket" elementType="Argument">
              <stringProp name="Argument.name">yunyingticket</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuticket" elementType="Argument">
              <stringProp name="Argument.name">xuqiuticket</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuticket" elementType="Argument">
              <stringProp name="Argument.name">caiwuticket</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">lianlian1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">111111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="alpha-------环境变量" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ssourl" elementType="Argument">
              <stringProp name="Argument.name">ssourl</stringProp>
              <stringProp name="Argument.value">172.16.1.146</stringProp>
              <stringProp name="Argument.desc">http://172.16.1.146:8080/sso/authorize</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssoport" elementType="Argument">
              <stringProp name="Argument.name">ssoport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssohttp" elementType="Argument">
              <stringProp name="Argument.name">ssohttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingurl" elementType="Argument">
              <stringProp name="Argument.name">yunyingurl</stringProp>
              <stringProp name="Argument.value">172.16.1.141</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingport" elementType="Argument">
              <stringProp name="Argument.name">yunyingport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyinghttp" elementType="Argument">
              <stringProp name="Argument.name">yunyinghttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuurl" elementType="Argument">
              <stringProp name="Argument.name">caiwuurl</stringProp>
              <stringProp name="Argument.value">172.16.1.142</stringProp>
              <stringProp name="Argument.desc">http://172.16.1.142:8080/</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuport" elementType="Argument">
              <stringProp name="Argument.name">caiwuport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuhttp" elementType="Argument">
              <stringProp name="Argument.name">caiwuhttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuurl" elementType="Argument">
              <stringProp name="Argument.name">xuqiuurl</stringProp>
              <stringProp name="Argument.value">172.16.1.143</stringProp>
              <stringProp name="Argument.desc">http://172.16.1.143:8080/</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuport" elementType="Argument">
              <stringProp name="Argument.name">xuqiuport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuhttp" elementType="Argument">
              <stringProp name="Argument.name">xuqiuhttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingticket" elementType="Argument">
              <stringProp name="Argument.name">yunyingticket</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuticket" elementType="Argument">
              <stringProp name="Argument.name">xuqiuticket</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuticket" elementType="Argument">
              <stringProp name="Argument.name">caiwuticket</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">lianlian1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">111111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="" elementType="Argument">
              <stringProp name="Argument.name"></stringProp>
              <stringProp name="Argument.value">172.16.1.128</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="" elementType="Argument">
              <stringProp name="Argument.name"></stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="开发---------------环境变量" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="weburl" elementType="Argument">
              <stringProp name="Argument.name">weburl</stringProp>
              <stringProp name="Argument.value">172.16.2.178</stringProp>
              <stringProp name="Argument.desc">http://172.16.2.178:8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="webport" elementType="Argument">
              <stringProp name="Argument.name">webport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="http" elementType="Argument">
              <stringProp name="Argument.name">http</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssourl" elementType="Argument">
              <stringProp name="Argument.name">ssourl</stringProp>
              <stringProp name="Argument.value">172.16.2.189</stringProp>
              <stringProp name="Argument.desc">http://172.16.2.189:8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssoport" elementType="Argument">
              <stringProp name="Argument.name">ssoport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssohttp" elementType="Argument">
              <stringProp name="Argument.name">ssohttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuurl" elementType="Argument">
              <stringProp name="Argument.name">caiwuurl</stringProp>
              <stringProp name="Argument.value">172.16.2.248</stringProp>
              <stringProp name="Argument.desc">http://10.21.11.121:8030/#/payment-mgmt/payment-query</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuport" elementType="Argument">
              <stringProp name="Argument.name">caiwuport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuhttp" elementType="Argument">
              <stringProp name="Argument.name">caiwuhttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuurl" elementType="Argument">
              <stringProp name="Argument.name">xuqiuurl</stringProp>
              <stringProp name="Argument.value">10.21.11.121</stringProp>
              <stringProp name="Argument.desc">http://10.21.11.121:8040/#/demand-mgmt/demand-mgmt</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuport" elementType="Argument">
              <stringProp name="Argument.name">xuqiuport</stringProp>
              <stringProp name="Argument.value">8040</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuhttp" elementType="Argument">
              <stringProp name="Argument.name">xuqiuhttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingticket" elementType="Argument">
              <stringProp name="Argument.name">yunyingticket</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuticket" elementType="Argument">
              <stringProp name="Argument.name">xuqiuticket</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuticket" elementType="Argument">
              <stringProp name="Argument.name">caiwuticket</stringProp>
              <stringProp name="Argument.value">4</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userId" elementType="Argument">
              <stringProp name="Argument.name">userId</stringProp>
              <stringProp name="Argument.value">2059599</stringProp>
              <stringProp name="Argument.desc">${username}的id</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="username" elementType="Argument">
              <stringProp name="Argument.name">username</stringProp>
              <stringProp name="Argument.value">13816294950</stringProp>
              <stringProp name="Argument.desc">登录名</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">098765</stringProp>
              <stringProp name="Argument.desc">登录密码</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xujunhongshop" elementType="Argument">
              <stringProp name="Argument.name">xujunhongshop</stringProp>
              <stringProp name="Argument.value">13</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">${itemId}店铺id</stringProp>
            </elementProp>
            <elementProp name="itemId" elementType="Argument">
              <stringProp name="Argument.name">itemId</stringProp>
              <stringProp name="Argument.value">121212877</stringProp>
              <stringProp name="Argument.desc">[{&quot;itemId&quot;:&quot;121212877&quot;,&quot;skuId&quot;:857012,&quot;itemTypeId&quot;:2,&quot;quantity&quot;:&quot;1.00&quot;}]</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="skuId" elementType="Argument">
              <stringProp name="Argument.name">skuId</stringProp>
              <stringProp name="Argument.value">857012</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="itemTypeId" elementType="Argument">
              <stringProp name="Argument.name">itemTypeId</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="quantity" elementType="Argument">
              <stringProp name="Argument.name">quantity</stringProp>
              <stringProp name="Argument.value">1.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="newtime" elementType="Argument">
              <stringProp name="Argument.name">newtime</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xjhpwd" elementType="Argument">
              <stringProp name="Argument.name">xjhpwd</stringProp>
              <stringProp name="Argument.value">wj12345678</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xujunhong" elementType="Argument">
              <stringProp name="Argument.name">xujunhong</stringProp>
              <stringProp name="Argument.value">13818250400</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="newtime1" elementType="Argument">
              <stringProp name="Argument.name">newtime1</stringProp>
              <stringProp name="Argument.value">${__time(hh:MM:ss)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sum" elementType="Argument">
              <stringProp name="Argument.name">sum</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sqlur" elementType="Argument">
              <stringProp name="Argument.name">sqlur</stringProp>
              <stringProp name="Argument.value">mysqldev.lsfash.cn</stringProp>
              <stringProp name="Argument.desc">数据库地址：lianshang   mysqldev.lsfash.cn:3307</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sqluser" elementType="Argument">
              <stringProp name="Argument.name">sqluser</stringProp>
              <stringProp name="Argument.value">ls_auto</stringProp>
              <stringProp name="Argument.desc">数据库地址：lianshang</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sqlpwd" elementType="Argument">
              <stringProp name="Argument.name">sqlpwd</stringProp>
              <stringProp name="Argument.value">CwfmT2G46mpRy94W</stringProp>
              <stringProp name="Argument.desc">数据库地址：lianshang  用户名密码：ls_auto，CwfmT2G46mpRy94W </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie 管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="boss后台" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="sso后台" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${ssourl}:${ssoport}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ssourl}</stringProp>
              <stringProp name="HTTPSampler.port">${ssoport}</stringProp>
              <stringProp name="HTTPSampler.protocol">${ssohttp}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </ConfigTestElement>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登陆" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="userName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userName</stringProp>
                    <stringProp name="Argument.value">${userName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userPassword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userPassword</stringProp>
                    <stringProp name="Argument.value">${userPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="validatecode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">validatecode</stringProp>
                    <stringProp name="Argument.value">12</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/sso/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="请求成功" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1094873850">请求成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取ticket" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sso/index</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="yunyingticket" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">yunyingticket</stringProp>
                <stringProp name="RegexExtractor.regex">ticket=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">${yunyingnumber}</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="xuqiuticket" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">xuqiuticket</stringProp>
                <stringProp name="RegexExtractor.regex">ticket=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">${xuqiunumber}</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="caiwuticket" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">caiwuticket</stringProp>
                <stringProp name="RegexExtractor.regex">ticket=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">${caiwunumber}</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="链尚网-管理后台-应用列表" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-97235309">链尚网-管理后台-应用列表</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="boss后台" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${yunyingurl}:${yunyingport}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="usertoken" elementType="Header">
                  <stringProp name="Header.name">usertoken</stringProp>
                  <stringProp name="Header.value">2e10a8cc18755f441237d4c51196bc0ca20ed38e15a9ad354ea22d02edcf79ef</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${yunyingurl}</stringProp>
              <stringProp name="HTTPSampler.port">${yunyingport}</stringProp>
              <stringProp name="HTTPSampler.protocol">${yunyinghttp}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </ConfigTestElement>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="boss后台" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ticket" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <stringProp name="Argument.value">${yunyingticket}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${yunyinghttp}://${yunyingurl}:${yunyingport}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/callback</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取验布坊列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/store/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取验布机列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="storeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">storeId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/store-machine/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卷详情信息接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
    &quot;rollCode&quot;:&quot;817061610110670001&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/check/info</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1266437688">{
    &quot;data&quot;: {
        &quot;rollInfo&quot;: {
              &quot;canStartTest&quot;:true,   //是否开始验布
              &quot;canSave&quot;:true,  //是否保存
              &quot;canSaveAndDown&quot;:true,   //是否保存并下机
            &quot;rollCode&quot;: &quot;817061610110670001&quot;,
            &quot;orderNo&quot;: 1810311021001,
            &quot;status&quot;: 3,
            &quot;productName&quot;: &quot;雪花呢&quot;,
            &quot;color&quot;: &quot;红色&quot;,
            &quot;expectValue&quot;: &quot;13.00米 / 13.00公斤&quot;,
            &quot;validateValue&quot;: &quot;13.00米 / 13.00公斤&quot;,
            &quot;deductRate&quot;: 236.69,
            &quot;fitDeliveryStandardStr&quot;: &quot;符合&quot;,
            &quot;fullFlawStr&quot;: &quot;是&quot;,
            &quot;expectLength&quot;: 13.00,
            &quot;expectRollWeight&quot;: 13.00,
            &quot;length&quot;: 13.00,
            &quot;rollWeight&quot;: 13.00,
            &quot;deviation&quot;: 0.00,
            &quot;deviationStr&quot;: &quot;&quot;,
            &quot;hasReport&quot;: true
            },
            &quot;report&quot;: {
                    &quot;id&quot;: 36218,
                    &quot;orderNo&quot;: 1810311021001,
                    &quot;createId&quot;: &quot;验布师1&quot;,
                    &quot;rollCode&quot;: &quot;618103110210010002&quot;,
                    &quot;reportName&quot;: &quot;0002&quot;,
                    &quot;inner_url&quot;: &quot;http://img.lianshang.cn/data/common/201810/5/2801_1540975886170.png&quot;,
                    &quot;reportStatus&quot;: 0,
                    &quot;outer_url&quot;: &quot;http://img.lianshang.cn/data/common/201810/5/1675_1540975888102.png&quot;
                },
        &quot;reportDetail&quot;: {
              &quot;id&quot;: 36184,
              &quot;createId&quot;: &quot;验布师1&quot;,
              &quot;batchNo&quot;: &quot;618103110210010002&quot;,
              &quot;checker&quot;: &quot;海&quot;,
              &quot;reportId&quot;: 36218,
              &quot;fullWidth&quot;: 13.00,
              &quot;availableWidth&quot;: 13.00,
              &quot;length&quot;: 13.00,
              &quot;rollWeight&quot;: 13.00,
              &quot;meterWeight&quot;: 13.00,
              &quot;squareMeterWeight&quot;: 13.00,
              &quot;expectFullWidth&quot;: 13.00,
              &quot;expectAvailableWidth&quot;: 13.00,
              &quot;expectLength&quot;: 13.00,
              &quot;expectRollWeight&quot;: 13.00,
              &quot;expectMeterWeight&quot;: 13.00,
              &quot;expectSquareMeterWeight&quot;: 13.00,
              &quot;wrapSteamShrinkage&quot;: 13.00,
              &quot;zonalSteamShrinkage&quot;: 13.00,
              &quot;wrapWashingShrinkage&quot;: 13.00,
              &quot;zonalWashingShrinkage&quot;: 0.00,
              &quot;customerMarkFlawNumber&quot;: 0,
              &quot;actualFlawNumber&quot;: 2,
              &quot;actualContinuousFlawNumber&quot;: 0,
              &quot;frontFlawNumber&quot;: 1,
              &quot;backFlawNumber&quot;: 1,
              &quot;resultStatistics&quot;: &quot;色纱:1个|污渍:1个&quot;,
              &quot;resultRemark&quot;: &quot;&quot;,
              &quot;resultStatisticList&quot;: [&quot;色纱:1个&quot;, &quot;污渍:1个&quot;],
              &quot;color&quot;: &quot;红色&quot;,
              &quot;totalScore&quot;: 4.00,
              &quot;deductRate&quot;: 236.69,
              &quot;scoreFlawNumList&quot;: [{
                &quot;score&quot;: 0,
                &quot;flawNum&quot;: 0
              }, {
                &quot;score&quot;: 1,
                &quot;flawNum&quot;: 0
              }, {
                &quot;score&quot;: 2,
                &quot;flawNum&quot;: 2
              }, {
                &quot;score&quot;: 3,
                &quot;flawNum&quot;: 0
              }, {
                &quot;score&quot;: 4,
                &quot;flawNum&quot;: 0
              }],
              &quot;resultJudge&quot;: &quot;&quot;,
              &quot;resultJudgeType&quot;: 1,
              &quot;fitDeliveryStandard&quot;: 1,
              &quot;otherDesc&quot;: &quot;&quot;,
              &quot;safeLength&quot;: 0.00,
              &quot;safeWeight&quot;: 0.00,
              &quot;fullFlawPicUrls&quot;: [&quot;http://img01.lianshang.cn/data/common/201810/5/1540975870785_791429.png&quot;],
              &quot;checkResultJudgeType&quot;: 0,
              &quot;paperTube&quot;: 13.00,
              &quot;expectPaperTube&quot;: 0.00,
              &quot;deviation&quot;: 0.00,
              &quot;deviationType&quot;: 0
        },
        &quot;reportFlaws&quot;: [{
                    &quot;id&quot;: 62283,
                    &quot;flawPos&quot;: 2.00,
                    &quot;flawType&quot;: 3,
                    &quot;flawName&quot;: &quot;色纱&quot;,
                    &quot;cutOffLength&quot;: 0.00,
                    &quot;reportId&quot;: 36218,
                    &quot;flawPicUrls&quot;: [],
                    &quot;score&quot;: 2,
                    &quot;fullFlaw&quot;: 0,
                    &quot;cutOff&quot;: false
                }, {
                    &quot;id&quot;: 62284,
                    &quot;flawPos&quot;: 5.00,
                    &quot;flawType&quot;: 6,
                    &quot;flawName&quot;: &quot;污渍&quot;,
                    &quot;cutOffLength&quot;: 0.00,
                    &quot;reportId&quot;: 36218,
                    &quot;flawPicUrls&quot;: [],
                    &quot;score&quot;: 2,
                    &quot;fullFlaw&quot;: 0,
                    &quot;cutOff&quot;: false
                }],
                &quot;reportFullFlaws&quot;: [{
                    &quot;id&quot;: 62285,
                    &quot;flawPos&quot;: 0.00,
                    &quot;flawType&quot;: 2,
                    &quot;flawName&quot;: &quot;折/皱痕&quot;,
                    &quot;cutOffLength&quot;: 0.00,
                    &quot;reportId&quot;: 36218,
                    &quot;flawPicUrls&quot;: [],
                    &quot;score&quot;: 0,
                    &quot;fullFlaw&quot;: 1,
                    &quot;cutOff&quot;: false
                }]
            }
    }</stringProp>
                  <stringProp name="-258071764">{
  &quot;code&quot;: -1,
  &quot;message&quot;: &quot;&quot;
}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">48</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卷上机接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
    &quot;rollCodes&quot;:[&quot;817061610110330001&quot;,&quot;817061610110670001&quot;]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/check/on</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">上机的卷的唯一码</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1047639602">{
    &quot;code&quot;: 200,
    &quot;message&quot;: &quot;上机成功&quot;,
    &quot;data&quot;: {
    },
    &quot;success&quot;: true
}</stringProp>
                  <stringProp name="1149829185">{
  &quot;code&quot;: -1,
  &quot;message&quot;: &quot;无权限上机&quot;
}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">48</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="品名接口" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/product-name/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="颜色接口" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/color/list</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="364697886">{&quot;message&quot;:&quot;请求成功&quot;,&quot;data&quot;:[{&quot;id&quot;:&quot;红色&quot;,&quot;name&quot;:&quot;红色&quot;},{&quot;id&quot;:&quot;橙红&quot;,&quot;name&quot;:&quot;橙红&quot;},{&quot;id&quot;:&quot;橙色&quot;,&quot;name&quot;:&quot;橙色&quot;},{&quot;id&quot;:&quot;橙黄&quot;,&quot;name&quot;:&quot;橙黄&quot;},{&quot;id&quot;:&quot;黄色&quot;,&quot;name&quot;:&quot;黄色&quot;},{&quot;id&quot;:&quot;黄绿&quot;,&quot;name&quot;:&quot;黄绿&quot;},{&quot;id&quot;:&quot;绿色&quot;,&quot;name&quot;:&quot;绿色&quot;},{&quot;id&quot;:&quot;蓝绿&quot;,&quot;name&quot;:&quot;蓝绿&quot;},{&quot;id&quot;:&quot;蓝色&quot;,&quot;name&quot;:&quot;蓝色&quot;},{&quot;id&quot;:&quot;蓝紫&quot;,&quot;name&quot;:&quot;蓝紫&quot;},{&quot;id&quot;:&quot;紫色&quot;,&quot;name&quot;:&quot;紫色&quot;},{&quot;id&quot;:&quot;紫红&quot;,&quot;name&quot;:&quot;紫红&quot;},{&quot;id&quot;:&quot;黑色&quot;,&quot;name&quot;:&quot;黑色&quot;},{&quot;id&quot;:&quot;灰色&quot;,&quot;name&quot;:&quot;灰色&quot;},{&quot;id&quot;:&quot;白色&quot;,&quot;name&quot;:&quot;白色&quot;},{&quot;id&quot;:&quot;粉色&quot;,&quot;name&quot;:&quot;粉色&quot;},{&quot;id&quot;:&quot;棕色&quot;,&quot;name&quot;:&quot;棕色&quot;},{&quot;id&quot;:&quot;花版&quot;,&quot;name&quot;:&quot;花版&quot;}],&quot;code&quot;:200}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询缺陷类型接口" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/flaw-type/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取上传的瑕疵图片" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
    &quot;qrcodeNo&quot;:&quot;1540964797295_367606&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/report/loadQrcodeImgs.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卷保存（验布）结果接口" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/check/save</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卷保存（验布）并下机接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
      &quot;rollInfo&quot;: {&#xd;
          &quot;canStartTest&quot;:true,&#xd;
          &quot;canSave&quot;:true,&#xd;
          &quot;canSaveAndDown&quot;:true,&#xd;
          &quot;rollCode&quot;: &quot;817061610110670001&quot;,&#xd;
          &quot;orderNo&quot;: 1810311021001,&#xd;
          &quot;status&quot;: 3,&#xd;
          &quot;productName&quot;: &quot;雪花呢&quot;,&#xd;
          &quot;color&quot;: &quot;红色&quot;,&#xd;
          &quot;expectValue&quot;: &quot;13.00米 / 13.00公斤&quot;,&#xd;
          &quot;validateValue&quot;: &quot;13.00米 / 13.00公斤&quot;,&#xd;
          &quot;deductRate&quot;: 236.69,&#xd;
          &quot;fitDeliveryStandardStr&quot;: &quot;符合&quot;,&#xd;
          &quot;fullFlawStr&quot;: &quot;是&quot;,&#xd;
          &quot;expectLength&quot;: 13.00,&#xd;
          &quot;expectRollWeight&quot;: 13.00,&#xd;
          &quot;length&quot;: 13.00,&#xd;
          &quot;rollWeight&quot;: 13.00,&#xd;
          &quot;deviation&quot;: 0.00,&#xd;
          &quot;deviationStr&quot;: &quot;&quot;,&#xd;
          &quot;hasReport&quot;: true&#xd;
      },&#xd;
      &quot;report&quot;: {&#xd;
          &quot;id&quot;: 36218,&#xd;
          &quot;orderNo&quot;: 1810311021001,&#xd;
          &quot;reportNo&quot;: &quot;1810311021001ghjhahjh&quot;,&#xd;
          &quot;createId&quot;: &quot;验布师1&quot;,&#xd;
          &quot;rollCode&quot;: &quot;618103110210010002&quot;,&#xd;
          &quot;reportName&quot;: &quot;0002&quot;,&#xd;
          &quot;inner_url&quot;: &quot;http://img.lianshang.cn/data/common/201810/5/2801_1540975886170.png&quot;,&#xd;
          &quot;reportStatus&quot;: 0,&#xd;
          &quot;outer_url&quot;: &quot;http://img.lianshang.cn/data/common/201810/5/1675_1540975888102.png&quot;&#xd;
          },&#xd;
      &quot;reportDetail&quot;: {&#xd;
          &quot;id&quot;: 36184,&#xd;
          &quot;createId&quot;: &quot;验布师1&quot;,&#xd;
          &quot;batchNo&quot;: &quot;618103110210010002&quot;,&#xd;
          &quot;checker&quot;: &quot;海&quot;,&#xd;
          &quot;reportNo&quot;: 36218,&#xd;
          &quot;fullWidth&quot;: 13.00,&#xd;
          &quot;availableWidth&quot;: 13.00,&#xd;
          &quot;length&quot;: 13.00,&#xd;
          &quot;rollWeight&quot;: 13.00,&#xd;
          &quot;meterWeight&quot;: 13.00,&#xd;
          &quot;squareMeterWeight&quot;: 13.00,&#xd;
          &quot;expectFullWidth&quot;: 13.00,&#xd;
          &quot;expectAvailableWidth&quot;: 13.00,&#xd;
          &quot;expectLength&quot;: 13.00,&#xd;
          &quot;expectRollWeight&quot;: 13.00,&#xd;
          &quot;expectMeterWeight&quot;: 13.00,&#xd;
          &quot;expectSquareMeterWeight&quot;: 13.00,&#xd;
          &quot;wrapSteamShrinkage&quot;: 13.00,&#xd;
          &quot;zonalSteamShrinkage&quot;: 13.00,&#xd;
          &quot;wrapWashingShrinkage&quot;: 13.00,&#xd;
          &quot;zonalWashingShrinkage&quot;: 0.00,&#xd;
          &quot;customerMarkFlawNumber&quot;: 0,&#xd;
          &quot;actualFlawNumber&quot;: 2,&#xd;
          &quot;actualContinuousFlawNumber&quot;: 0,&#xd;
          &quot;frontFlawNumber&quot;: 1,&#xd;
          &quot;backFlawNumber&quot;: 1,&#xd;
          &quot;resultStatistics&quot;: &quot;色纱:1个|污渍:1个&quot;,&#xd;
          &quot;resultRemark&quot;: &quot;&quot;,&#xd;
          &quot;resultStatisticList&quot;: [&quot;色纱:1个&quot;, &quot;污渍:1个&quot;],&#xd;
          &quot;color&quot;: &quot;红色&quot;,&#xd;
          &quot;totalScore&quot;: 4.00,&#xd;
          &quot;deductRate&quot;: 236.69,&#xd;
          &quot;scoreFlawNumList&quot;: [{&#xd;
            &quot;score&quot;: 0,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 1,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 2,&#xd;
            &quot;flawNum&quot;: 2&#xd;
          }, {&#xd;
            &quot;score&quot;: 3,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 4,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }],&#xd;
          &quot;resultJudge&quot;: &quot;&quot;,&#xd;
          &quot;resultJudgeType&quot;: 1,&#xd;
          &quot;fitDeliveryStandard&quot;: 1,&#xd;
          &quot;otherDesc&quot;: &quot;&quot;,&#xd;
          &quot;safeLength&quot;: 0.00,&#xd;
          &quot;safeWeight&quot;: 0.00,&#xd;
          &quot;fullFlawPicUrls&quot;: [&quot;http://img01.lianshang.cn/data/common/201810/5/1540975870785_791429.png&quot;],&#xd;
          &quot;checkResultJudgeType&quot;: 0,&#xd;
          &quot;paperTube&quot;: 13.00,&#xd;
          &quot;expectPaperTube&quot;: 0.00,&#xd;
          &quot;deviation&quot;: 0.00,&#xd;
          &quot;deviationType&quot;: 0&#xd;
      },&#xd;
      &quot;reportFlaws&quot;: [{&#xd;
          &quot;id&quot;: 62283,&#xd;
          &quot;flawPos&quot;: 2.00,&#xd;
          &quot;flawType&quot;: 3,&#xd;
          &quot;flawName&quot;: &quot;色纱&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;clothReportId&quot;: 36218,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 2,&#xd;
          &quot;fullFlaw&quot;: 0,&#xd;
          &quot;cutOff&quot;: false&#xd;
        }, {&#xd;
          &quot;id&quot;: 62284,&#xd;
          &quot;flawPos&quot;: 5.00,&#xd;
          &quot;flawType&quot;: 6,&#xd;
          &quot;flawName&quot;: &quot;污渍&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;clothReportId&quot;: 36218,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 2,&#xd;
          &quot;fullFlaw&quot;: 0,&#xd;
          &quot;cutOff&quot;: false&#xd;
        }],&#xd;
        &quot;reportFullFlaws&quot;: [{&#xd;
          &quot;id&quot;: 62285,&#xd;
          &quot;flawPos&quot;: 0.00,&#xd;
          &quot;flawType&quot;: 2,&#xd;
          &quot;flawName&quot;: &quot;折/皱痕&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;clothReportId&quot;: 36218,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 0,&#xd;
          &quot;fullFlaw&quot;: 1,&#xd;
          &quot;cutOff&quot;: false&#xd;
        }]&#xd;
     }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/check/down</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1875801775">{
    &quot;code&quot;: 200,
    &quot;message&quot;: &quot;&quot;,
    &quot;data&quot;: {
    },
    &quot;success&quot;: true
}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取打印信息单" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="orderNo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">orderNo</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/print-info</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">订单号</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985754764">{
    &quot;code&quot;:200,
    &quot;message&quot;:&quot;成功&quot;,
    &quot;data&quot;:{ 
        &quot;clothOrderNo&quot;:1810301011000, //订单
        &quot;reOrderTradeId&quot;:null, //返单
        &quot;tradeId&quot;:&quot;&quot;,  //订单
        &quot;needPull&quot;:false,  //是否需要拉货
        &quot;productNames&quot;:&quot;雪花呢&quot;,  //品名
        &quot;rollNums&quot;:6,         //面料卷数
        &quot;customerName&quot;:&quot;呃呃呃呃&quot;,      //送检人
        &quot;customerMobile&quot;:&quot;13532123453&quot;,     //送检人电话
        &quot;stallsName&quot;:&quot;呃呃呃呃&quot;,      //送检档口
        &quot;marketName&quot;:&quot;东升路市场&quot;,     //所属市场
        &quot;declarer&quot;:0,           //报单人id 不提供
        &quot;buyerOperatorId&quot;:0,    //买家运营 不提供
        &quot;requireCompleteType&quot;:&quot;当日 / 2018-10-30 20:13:23 / &quot;,    //发货时间要求
        &quot;clothOrderType&quot;:[1],       //验货项目    基础验布   客户自检   打卷   称重
        &quot;logisticsAddress&quot;:&quot;&quot;,  //收货地址
        &quot;salesman&quot;:null,         //跟进人/销售
        &quot;logisticsCompany&quot;:null,   //物流公司
        &quot;receiverInfo&quot;:null,   //收货地址
        &quot;remark&quot;:&quot;&quot;,    //备注
        &quot;declareOperatorName&quot;:null    //报单人/买家运营 不提供
    }
}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取打印二维码信息" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="rollCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">唯一卷</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">rollCode</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order-roll/print-qr-info</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="828261743">{
    &quot;data&quot;: {
        &quot;rollCode&quot;:&quot;618103010110000001&quot;,
        &quot;productName&quot;:&quot;雪花呢&quot;,
        &quot;colorName&quot;:&quot;红色&quot;,
        &quot;batchNo&quot;:&quot;&quot;,
        &quot;amount&quot;:&quot;0.00米/0.00公斤&quot;,
        &quot;receiveName&quot;:&quot;&quot;,
        &quot;receiveMobile&quot;:&quot;&quot;,
        &quot;receiveAddress&quot;:&quot;&quot;,
        &quot;qrUrl&quot;:&quot;http://xxxx/xxx&quot;,
        &quot;qrImgUrl&quot;:&quot;/qr?content=&amp;height=&amp;width=&quot;
    },
    &quot;code&quot;:200,
    &quot;message&quot;:&quot;成功&quot;,
    &quot;success&quot;:true
}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取验布坊订单列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">    draw:21&#xd;
    sortColumn:createTime&#xd;
    sortDir:asc&#xd;
    start:0&#xd;
    limit:20&#xd;
    where:{&#xd;
        &quot;rules&quot;:[&#xd;
            {&quot;field&quot;:&quot;co.create_time&quot;,&quot;value&quot;:&quot;2018-10-25 00:00 - 2018-11-06 23:59&quot;,&quot;op&quot;:&quot;between&quot;},&#xd;
            {&quot;field&quot;:&quot;co.require_completion_time&quot;,&quot;value&quot;:&quot;2018-10-25 00:00 - 2018-11-06 23:59&quot;,&quot;op&quot;:&quot;between&quot;},&#xd;
            {&quot;field&quot;:&quot;co.status&quot;,&quot;value&quot;:3,&quot;op&quot;:&quot;equal&quot;},&#xd;
            {&quot;field&quot;:&quot;co.is_delivery&quot;,&quot;value&quot;:0,&quot;op&quot;:&quot;equal&quot;}&#xd;
        ],&#xd;
        &quot;groups&quot;:[],&#xd;
        &quot;op&quot;:&quot;and&quot;&#xd;
    }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order-roll/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">唯一卷</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-121948827">{
    &quot;recordsTotal&quot;:2,
    &quot;data&quot;: [
        {
            &quot;id&quot;:7824,
            &quot;rollCode&quot;:&quot;1810301011000&quot;, //唯一码
            &quot;orderNo&quot;:&quot;&quot;, //验布单号
            &quot;customerName&quot;:&quot;&quot;, //客户
            &quot;boyName&quot;:&quot;&quot;, //理单员
            &quot;status&quot;:1, //状态
            &quot;statusName&quot;:&quot;xxx&quot;, //状态
            &quot;clothReport&quot;:{
                &quot;innerUrl&quot;:&quot;&quot;,//内部报告
                &quot;outer_url&quot;:&quot;&quot;//外部报告
            }
        }
    ],
    &quot;code&quot;:200,
    &quot;message&quot;:&quot;成功&quot;,
    &quot;success&quot;:true
}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="验布大盘" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="全部验布订单" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="全部验布订单" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="draw" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">draw</stringProp>
                  </elementProp>
                  <elementProp name="sortColumn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">createTime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sortColumn</stringProp>
                  </elementProp>
                  <elementProp name="sortDir" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">asc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sortDir</stringProp>
                  </elementProp>
                  <elementProp name="start" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">start</stringProp>
                  </elementProp>
                  <elementProp name="limit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">20</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">limit</stringProp>
                  </elementProp>
                  <elementProp name="where" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;rules&quot;:[{&quot;field&quot;:&quot;co.create_time&quot;,&quot;value&quot;:&quot;2017-10-25 00:00 - 2018-11-06 23:59&quot;,&quot;op&quot;:&quot;between&quot;},{&quot;field&quot;:&quot;co.require_completion_time&quot;,&quot;value&quot;:&quot;2018-10-25 00:00 - 2018-11-06 23:59&quot;,&quot;op&quot;:&quot;between&quot;}],&quot;groups&quot;:[],&quot;op&quot;:&quot;and&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">where</stringProp>
                  </elementProp>
                  <elementProp name="isClothStoreData" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">isClothStoreData</stringProp>
                  </elementProp>
                  <elementProp name="isUnDelivery" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">isUnDelivery</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/cloth-order/getAllStore.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="新增散客订单" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="活动管理" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">/activity/queryActivityItem.do</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增活动" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="activityName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0827_1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityName</stringProp>
                  </elementProp>
                  <elementProp name="activityDesc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0827_1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityDesc</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2018-08-27 03:03:28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2018-08-28 03:03:28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="budget" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">budget</stringProp>
                  </elementProp>
                  <elementProp name="memo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">memo</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/activity/addActivity.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1595747331">{&quot;data&quot;:null,&quot;code&quot;:200,&quot;message&quot;:&quot;成功&quot;,&quot;success&quot;:true}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="优惠券模板" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="优惠券模板列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="draw" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">draw</stringProp>
                  </elementProp>
                  <elementProp name="sortColumn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">activityName</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sortColumn</stringProp>
                  </elementProp>
                  <elementProp name="sortDir" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">desc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sortDir</stringProp>
                  </elementProp>
                  <elementProp name="start" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">start</stringProp>
                  </elementProp>
                  <elementProp name="limit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">limit</stringProp>
                  </elementProp>
                  <elementProp name="where" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;rules&quot;:[{&quot;field&quot;:&quot;template.create_time&quot;,&quot;value&quot;:&quot;2018-08-20 00:00 - 2018-08-27 23:59&quot;,&quot;op&quot;:&quot;between&quot;}],&quot;groups&quot;:[],&quot;op&quot;:&quot;and&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">where</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/coupon-template/queryCouponTemplateItem.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增模板" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="prefixBatchNo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0827_1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">prefixBatchNo</stringProp>
                  </elementProp>
                  <elementProp name="templateName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0827_1mb</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">templateName</stringProp>
                  </elementProp>
                  <elementProp name="couponItemType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">couponItemType</stringProp>
                  </elementProp>
                  <elementProp name="couponFee" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">couponFee</stringProp>
                  </elementProp>
                  <elementProp name="minTradeAmount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">minTradeAmount</stringProp>
                  </elementProp>
                  <elementProp name="targetType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">targetType</stringProp>
                  </elementProp>
                  <elementProp name="needManualActive" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">needManualActive</stringProp>
                  </elementProp>
                  <elementProp name="receiveUpLimit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">receiveUpLimit</stringProp>
                  </elementProp>
                  <elementProp name="effectiveDateType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">effectiveDateType</stringProp>
                  </elementProp>
                  <elementProp name="relativeDays" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">relativeDays</stringProp>
                  </elementProp>
                  <elementProp name="validateStartTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2018-08-27 15:11:32</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">validateStartTime</stringProp>
                  </elementProp>
                  <elementProp name="validateEndTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2018-09-30 00:00:00</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">validateEndTime</stringProp>
                  </elementProp>
                  <elementProp name="activityId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">35</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/coupon-template/addCouponTemplate.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1595747331">{&quot;data&quot;:null,&quot;code&quot;:200,&quot;message&quot;:&quot;成功&quot;,&quot;success&quot;:true}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="定向发券" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="定向发券列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="draw" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">draw</stringProp>
                  </elementProp>
                  <elementProp name="sortColumn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">id</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sortColumn</stringProp>
                  </elementProp>
                  <elementProp name="sortDir" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">desc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sortDir</stringProp>
                  </elementProp>
                  <elementProp name="start" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">start</stringProp>
                  </elementProp>
                  <elementProp name="limit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">25</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">limit</stringProp>
                  </elementProp>
                  <elementProp name="where" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;rules&quot;:[{&quot;field&quot;:&quot;orientation.create_time&quot;,&quot;value&quot;:&quot;2018-08-20 00:00 - 2018-08-27 23:59&quot;,&quot;op&quot;:&quot;between&quot;}],&quot;groups&quot;:[],&quot;op&quot;:&quot;and&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">where</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/orientation/queryOrientationCouponInfo.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增定向发券" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="saveOrientationCouponJson" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;orientationCouponId&quot;:0,&quot;activityId&quot;:35,&quot;couponTemplateId&quot;:68,&quot;launch&quot;:false,&quot;userOrientationCouponDetailBeans&quot;:[{&quot;mobile&quot;:&quot;15111130602&quot;,&quot;tradeId&quot;:&quot;&quot;,&quot;remark&quot;:&quot;1511113060215111130602&quot;,&quot;couponFee&quot;:&quot;5&quot;,&quot;remarkWordCount&quot;:22,&quot;$$hashKey&quot;:&quot;object:641&quot;},{&quot;mobile&quot;:&quot;18787990090&quot;,&quot;tradeId&quot;:&quot;&quot;,&quot;remark&quot;:&quot;1878799009018787990090&quot;,&quot;couponFee&quot;:&quot;10&quot;,&quot;remarkWordCount&quot;:22,&quot;$$hashKey&quot;:&quot;object:651&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">saveOrientationCouponJson</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/orientation/addOrGrantOrientationCoupon.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="验布后台alpha" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1490516197000</longProp>
        <longProp name="ThreadGroup.end_time">1490516197000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="alpha-------环境变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ssourl" elementType="Argument">
              <stringProp name="Argument.name">ssourl</stringProp>
              <stringProp name="Argument.value">172.16.1.146</stringProp>
              <stringProp name="Argument.desc">http://172.16.1.146:8080/sso/authorize</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssoport" elementType="Argument">
              <stringProp name="Argument.name">ssoport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ssohttp" elementType="Argument">
              <stringProp name="Argument.name">ssohttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingurl" elementType="Argument">
              <stringProp name="Argument.name">yunyingurl</stringProp>
              <stringProp name="Argument.value">172.16.1.141</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingport" elementType="Argument">
              <stringProp name="Argument.name">yunyingport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyinghttp" elementType="Argument">
              <stringProp name="Argument.name">yunyinghttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuurl" elementType="Argument">
              <stringProp name="Argument.name">caiwuurl</stringProp>
              <stringProp name="Argument.value">172.16.1.142</stringProp>
              <stringProp name="Argument.desc">http://172.16.1.142:8080/</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuport" elementType="Argument">
              <stringProp name="Argument.name">caiwuport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuhttp" elementType="Argument">
              <stringProp name="Argument.name">caiwuhttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuurl" elementType="Argument">
              <stringProp name="Argument.name">xuqiuurl</stringProp>
              <stringProp name="Argument.value">172.16.1.143</stringProp>
              <stringProp name="Argument.desc">http://172.16.1.143:8080/</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuport" elementType="Argument">
              <stringProp name="Argument.name">xuqiuport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuhttp" elementType="Argument">
              <stringProp name="Argument.name">xuqiuhttp</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yunyingticket" elementType="Argument">
              <stringProp name="Argument.name">yunyingticket</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xuqiuticket" elementType="Argument">
              <stringProp name="Argument.name">xuqiuticket</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="caiwuticket" elementType="Argument">
              <stringProp name="Argument.name">caiwuticket</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">lianlian1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userPassword" elementType="Argument">
              <stringProp name="Argument.name">userPassword</stringProp>
              <stringProp name="Argument.value">111111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sharpurl" elementType="Argument">
              <stringProp name="Argument.name">sharpurl</stringProp>
              <stringProp name="Argument.value">172.16.1.128</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sharpport" elementType="Argument">
              <stringProp name="Argument.name">sharpport</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="http" elementType="Argument">
              <stringProp name="Argument.name">http</stringProp>
              <stringProp name="Argument.value">http</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie 管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="验布后台后台" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="验布后台old" enabled="false"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${ssourl}:${ssoport}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ssourl}</stringProp>
              <stringProp name="HTTPSampler.port">${ssoport}</stringProp>
              <stringProp name="HTTPSampler.protocol">${ssohttp}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </ConfigTestElement>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登陆" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="userName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userName</stringProp>
                    <stringProp name="Argument.value">${userName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userPassword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userPassword</stringProp>
                    <stringProp name="Argument.value">${userPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="validatecode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">validatecode</stringProp>
                    <stringProp name="Argument.value">12</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/sso/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="请求成功" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1094873850">请求成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取ticket" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sso/index</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="yunyingticket" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">yunyingticket</stringProp>
                <stringProp name="RegexExtractor.regex">ticket=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">${yunyingnumber}</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="xuqiuticket" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">xuqiuticket</stringProp>
                <stringProp name="RegexExtractor.regex">ticket=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">${xuqiunumber}</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="caiwuticket" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">caiwuticket</stringProp>
                <stringProp name="RegexExtractor.regex">ticket=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">${caiwunumber}</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="链尚网-管理后台-应用列表" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-97235309">链尚网-管理后台-应用列表</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="验布大盘" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="全部验布订单" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="全部验布订单" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="draw" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">3</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">draw</stringProp>
                      </elementProp>
                      <elementProp name="sortColumn" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">createTime</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">sortColumn</stringProp>
                      </elementProp>
                      <elementProp name="sortDir" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">asc</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">sortDir</stringProp>
                      </elementProp>
                      <elementProp name="start" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">start</stringProp>
                      </elementProp>
                      <elementProp name="limit" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">20</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">limit</stringProp>
                      </elementProp>
                      <elementProp name="where" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;rules&quot;:[{&quot;field&quot;:&quot;co.create_time&quot;,&quot;value&quot;:&quot;2017-10-25 00:00 - 2018-11-06 23:59&quot;,&quot;op&quot;:&quot;between&quot;},{&quot;field&quot;:&quot;co.require_completion_time&quot;,&quot;value&quot;:&quot;2018-10-25 00:00 - 2018-11-06 23:59&quot;,&quot;op&quot;:&quot;between&quot;}],&quot;groups&quot;:[],&quot;op&quot;:&quot;and&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">where</stringProp>
                      </elementProp>
                      <elementProp name="isClothStoreData" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">isClothStoreData</stringProp>
                      </elementProp>
                      <elementProp name="isUnDelivery" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">isUnDelivery</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/cloth-order/getAllStore.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增散客订单" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="order" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;logisticsTypeId&quot;:3,&quot;requireCompletionTime&quot;:&quot;2018-11-02 17:48:34&quot;,&quot;clothStoreId&quot;:2,&quot;clothSource&quot;:3,&quot;buyerName&quot;:&quot;制衣&quot;,&quot;buyerContactMobile&quot;:&quot;17789006788&quot;,&quot;remark&quot;:&quot;请问备注说明&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">order</stringProp>
                    </elementProp>
                    <elementProp name="logistics" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">logistics</stringProp>
                    </elementProp>
                    <elementProp name="subOrderList" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">[{&quot;itemList&quot;:[{&quot;productName&quot;:&quot;针织&quot;,&quot;clothStructure&quot;:1,&quot;categoryName&quot;:&quot;&quot;,&quot;outerCategoryCode&quot;:&quot;&quot;,&quot;colorName&quot;:&quot;橙色&quot;,&quot;itemImg&quot;:&quot;&quot;,&quot;orderType&quot;:1,&quot;checkType&quot;:1,&quot;expectRollQuantity&quot;:10,&quot;needCheckRollQuantity&quot;:10,&quot;widthUnit&quot;:&quot;厘米&quot;,&quot;lengthUnit&quot;:&quot;米&quot;,&quot;rollWeightUnit&quot;:&quot;公斤&quot;,&quot;meterWeightUnit&quot;:&quot;g/m&quot;,&quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;}],&quot;customerType&quot;:3,&quot;customerShopName&quot;:&quot;中大鸿鑫纺织&quot;,&quot;customerShopMobile&quot;:&quot;18664891797&quot;,&quot;marketId&quot;:7,&quot;customerId&quot;:2063648}]</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">subOrderList</stringProp>
                    </elementProp>
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/cloth-order/saveClothOrderRoll.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">http://bossadmin.lian-shang.cn/cloth-order/saveClothOrderRoll.do</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-716214581">{
    &quot;code&quot;:200,
    &quot;message&quot;:&quot;成功&quot;,
    &quot;runEnv&quot;:&quot;prelease&quot;,
    &quot;clientVersion&quot;:&quot;180917162858&quot;,
    &quot;data&quot;:{
        &quot;data&quot;:[
            {
                &quot;rollCode&quot;:&quot;618110220110040001&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040002&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040003&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040004&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040005&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040006&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040007&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040008&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040009&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            },
            {
                &quot;rollCode&quot;:&quot;618110220110040010&quot;,
                &quot;thirdOrderNo&quot;:&quot;&quot;,
                &quot;clothOrderNo&quot;:1811022011004,
                &quot;clothOrderItemId&quot;:12253,
                &quot;rowNo&quot;:1,
                &quot;status&quot;:1,
                &quot;productName&quot;:&quot;&quot;,
                &quot;colorName&quot;:&quot;橙色&quot;,
                &quot;itemName&quot;:&quot;针织&quot;,
                &quot;clothStructure&quot;:1,
                &quot;clothStructureText&quot;:&quot;梭织&quot;,
                &quot;orderType&quot;:1,
                &quot;orderTypeText&quot;:&quot;基础验布&quot;,
                &quot;checkTypeText&quot;:&quot;全检&quot;,
                &quot;packingSlipColor&quot;:null,
                &quot;packingSlipColorNo&quot;:null,
                &quot;amount&quot;:null,
                &quot;expectValue&quot;:null,
                &quot;validateValue&quot;:null,
                &quot;deductRate&quot;:null,
                &quot;fitDeliveryStandardStr&quot;:null,
                &quot;fullFlawStr&quot;:null,
                &quot;widthUnit&quot;:&quot;厘米&quot;,
                &quot;lengthUnit&quot;:&quot;米&quot;,
                &quot;rollWeightUnit&quot;:&quot;公斤&quot;,
                &quot;meterWeightUnit&quot;:&quot;g/m&quot;,
                &quot;squareMeterWeightUnit&quot;:&quot;g/m²&quot;,
                &quot;expectLength&quot;:null,
                &quot;expectRollWeight&quot;:null,
                &quot;length&quot;:null,
                &quot;rollWeight&quot;:null,
                &quot;deviation&quot;:null,
                &quot;deviationStr&quot;:null,
                &quot;rollCodeUrl&quot;:null,
                &quot;saleFlag&quot;:null,
                &quot;hasReport&quot;:false,
                &quot;shopName&quot;:null,
                &quot;subTradeId&quot;:1811022011004,
                &quot;inSalIng&quot;:false
            }
        ],
        &quot;baseUrl&quot;:&quot;http://m.lian-shang.cn&quot;
    }
}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="卷唯一码编号1_rollCode1" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">rollCode1</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;rollCode&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="验布后台new" enabled="true"/>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${sharpurl}:${sharpport}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="usertoken" elementType="Header">
                  <stringProp name="Header.name">usertoken</stringProp>
                  <stringProp name="Header.value">7e2ac3f69b0ea89395ec4b5c05a0477e209eee17a63baa44f8e3ddc733e30e7e</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${sharpurl}</stringProp>
              <stringProp name="HTTPSampler.port">${sharpport}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </ConfigTestElement>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="boss后台" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ticket" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ticket</stringProp>
                    <stringProp name="Argument.value">${yunyingticket}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${yunyinghttp}://${yunyingurl}:${yunyingport}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/callback</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取验布坊列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/store/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取验布机列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="storeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">storeId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/store-machine/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卷详情信息接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
    &quot;rollCode&quot;:&quot;618110210110020003&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/check/info</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卷上机接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
    &quot;rollCodes&quot;:[&quot;818101520110010001&quot;]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/check/on</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">上机的卷的唯一码</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="品名接口" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/product-name/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="颜色接口" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/color/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询缺陷类型接口" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="qrcodeNo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1540964797295_367606</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">qrcodeNo</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/flaw-type/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取上传的瑕疵图片" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
    &quot;qrcodeNo&quot;:&quot;1541150236918_268927&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/report/loadQrcodeImgs</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卷保存（验布）结果接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
      &quot;rollInfo&quot;: {&#xd;
         &quot;canStartTest&quot;:true,&#xd;
         &quot;canSave&quot;:true,&#xd;
         &quot;canSaveAndDown&quot;:true,&#xd;
          &quot;rollCode&quot;: &quot;618110210110000003&quot;,&#xd;
          &quot;orderNo&quot;: 1811021011000,&#xd;
          &quot;status&quot;: 3,&#xd;
          &quot;productName&quot;: &quot;雪花呢&quot;,&#xd;
          &quot;color&quot;: &quot;红色&quot;,&#xd;
          &quot;expectValue&quot;: &quot;13.00米 / 13.00公斤&quot;,&#xd;
          &quot;validateValue&quot;: &quot;13.00米 / 13.00公斤&quot;,&#xd;
          &quot;deductRate&quot;: 236.69,&#xd;
          &quot;fitDeliveryStandardStr&quot;: &quot;符合&quot;,&#xd;
          &quot;fullFlawStr&quot;: &quot;是&quot;,&#xd;
          &quot;expectLength&quot;: 13.00,&#xd;
          &quot;expectRollWeight&quot;: 13.00,&#xd;
          &quot;length&quot;: 13.00,&#xd;
          &quot;rollWeight&quot;: 13.00,&#xd;
          &quot;deviation&quot;: 0.00,&#xd;
          &quot;deviationStr&quot;: &quot;&quot;,&#xd;
          &quot;hasReport&quot;: true&#xd;
      },&#xd;
      &quot;report&quot;: {&#xd;
          &quot;id&quot;: 36218,&#xd;
          &quot;orderNo&quot;: 1811031011001,&#xd;
          &quot;reportNo&quot;: &quot;&quot;,&#xd;
          &quot;createId&quot;: &quot;验布师1&quot;,&#xd;
          &quot;rowNo&quot;: 1,&#xd;
          &quot;rollCode&quot;: &quot;618110310110010001&quot;,&#xd;
          &quot;reportName&quot;: &quot;0002&quot;,&#xd;
          &quot;inner_url&quot;: &quot;http://img.lianshang.cn/data/common/201810/5/2801_1540975886170.png&quot;,&#xd;
          &quot;reportStatus&quot;: 0,&#xd;
          &quot;outer_url&quot;: &quot;http://img.lianshang.cn/data/common/201810/5/1675_1540975888102.png&quot;,&#xd;
          &quot;downMachine&quot;:true,&#xd;
          &quot;confirm&quot;:true,&#xd;
          &quot;categoryName&quot;:&quot;雪花呢&quot;,&#xd;
          &quot;innerCategoryCode&quot;:232&#xd;
          },&#xd;
      &quot;reportDetail&quot;: {&#xd;
          &quot;id&quot;: 36184,&#xd;
          &quot;createId&quot;: &quot;验布师1&quot;,&#xd;
          &quot;batchNo&quot;: &quot;618110310110010001&quot;,&#xd;
          &quot;checker&quot;: &quot;海&quot;,&#xd;
          &quot;reportNo&quot;: &quot;&quot;,&#xd;
          &quot;fullWidth&quot;: 13.00,&#xd;
          &quot;availableWidth&quot;: 13.00,&#xd;
          &quot;length&quot;: 13.00,&#xd;
          &quot;rollWeight&quot;: 13.00,&#xd;
          &quot;meterWeight&quot;: 13.00,&#xd;
          &quot;squareMeterWeight&quot;: 13.00,&#xd;
          &quot;expectFullWidth&quot;: 13.00,&#xd;
          &quot;expectAvailableWidth&quot;: 13.00,&#xd;
          &quot;expectLength&quot;: 13.00,&#xd;
          &quot;expectRollWeight&quot;: 13.00,&#xd;
          &quot;expectMeterWeight&quot;: 13.00,&#xd;
          &quot;expectSquareMeterWeight&quot;: 13.00,&#xd;
          &quot;wrapSteamShrinkage&quot;: 13.00,&#xd;
          &quot;zonalSteamShrinkage&quot;: 13.00,&#xd;
          &quot;wrapWashingShrinkage&quot;: 13.00,&#xd;
          &quot;zonalWashingShrinkage&quot;: 0.00,&#xd;
          &quot;customerMarkFlawNumber&quot;: 0,&#xd;
          &quot;actualFlawNumber&quot;: 2,&#xd;
          &quot;actualContinuousFlawNumber&quot;: 0,&#xd;
          &quot;frontFlawNumber&quot;: 1,&#xd;
          &quot;backFlawNumber&quot;: 1,&#xd;
          &quot;resultStatistics&quot;: &quot;色纱:1个|污渍:1个&quot;,&#xd;
          &quot;resultRemark&quot;: &quot;&quot;,&#xd;
          &quot;resultStatisticList&quot;: [&quot;色纱:1个&quot;, &quot;污渍:1个&quot;],&#xd;
          &quot;color&quot;: &quot;红色&quot;,&#xd;
          &quot;totalScore&quot;: 4.00,&#xd;
          &quot;deductRate&quot;: 236.69,&#xd;
          &quot;scoreFlawNumList&quot;: [{&#xd;
            &quot;score&quot;: 0,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 1,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 2,&#xd;
            &quot;flawNum&quot;: 2&#xd;
          }, {&#xd;
            &quot;score&quot;: 3,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 4,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }],&#xd;
          &quot;resultJudge&quot;: &quot;&quot;,&#xd;
          &quot;resultJudgeType&quot;: 1,&#xd;
          &quot;fitDeliveryStandard&quot;: 1,&#xd;
          &quot;otherDesc&quot;: &quot;&quot;,&#xd;
          &quot;safeLength&quot;: 0.00,&#xd;
          &quot;safeWeight&quot;: 0.00,&#xd;
          &quot;fullFlawPicUrls&quot;: [],&#xd;
          &quot;checkResultJudgeType&quot;: 0,&#xd;
          &quot;paperTube&quot;: 13.00,&#xd;
          &quot;expectPaperTube&quot;: 0.00,&#xd;
          &quot;deviation&quot;: 0.00,&#xd;
          &quot;deviationType&quot;: 0&#xd;
      },&#xd;
      &quot;reportFlaws&quot;: [{&#xd;
          &quot;id&quot;: 62283,&#xd;
          &quot;flawPos&quot;: 2.00,&#xd;
          &quot;flawType&quot;: 3,&#xd;
          &quot;flawName&quot;: &quot;色纱&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;reportId&quot;: &quot;&quot;,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 2,&#xd;
          &quot;fullFlaw&quot;: 0,&#xd;
          &quot;cutOff&quot;: false,&#xd;
          &quot;isCutOff&quot;: false&#xd;
        }, {&#xd;
          &quot;id&quot;: 62284,&#xd;
          &quot;flawPos&quot;: 5.00,&#xd;
          &quot;flawType&quot;: 6,&#xd;
          &quot;flawName&quot;: &quot;污渍&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;reportId&quot;: &quot;&quot;,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 2,&#xd;
          &quot;fullFlaw&quot;: 0,&#xd;
          &quot;cutOff&quot;: false,&#xd;
          &quot;isCutOff&quot;: false&#xd;
        }],&#xd;
        &quot;reportFullFlaws&quot;: [{&#xd;
          &quot;id&quot;: 62285,&#xd;
          &quot;flawPos&quot;: 0.00,&#xd;
          &quot;flawType&quot;: 2,&#xd;
          &quot;flawName&quot;: &quot;折/皱痕&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;reportId&quot;: &quot;&quot;,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 0,&#xd;
          &quot;fullFlaw&quot;: 1,&#xd;
          &quot;cutOff&quot;: false,&#xd;
          &quot;isCutOff&quot;: false&#xd;
        }]&#xd;
     }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/check/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卷保存（验布）并下机接口----废弃了" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
      &quot;rollInfo&quot;: {&#xd;
         &quot;canStartTest&quot;:true,&#xd;
         &quot;canSave&quot;:true,&#xd;
         &quot;canSaveAndDown&quot;:true,&#xd;
          &quot;rollCode&quot;: &quot;618110210110000002&quot;,&#xd;
          &quot;orderNo&quot;: 1811021011000,&#xd;
          &quot;status&quot;: 3,&#xd;
          &quot;productName&quot;: &quot;雪花呢&quot;,&#xd;
          &quot;color&quot;: &quot;红色&quot;,&#xd;
          &quot;expectValue&quot;: &quot;13.00米 / 13.00公斤&quot;,&#xd;
          &quot;validateValue&quot;: &quot;13.00米 / 13.00公斤&quot;,&#xd;
          &quot;deductRate&quot;: 236.69,&#xd;
          &quot;fitDeliveryStandardStr&quot;: &quot;符合&quot;,&#xd;
          &quot;fullFlawStr&quot;: &quot;是&quot;,&#xd;
          &quot;expectLength&quot;: 13.00,&#xd;
          &quot;expectRollWeight&quot;: 13.00,&#xd;
          &quot;length&quot;: 13.00,&#xd;
          &quot;rollWeight&quot;: 13.00,&#xd;
          &quot;deviation&quot;: 0.00,&#xd;
          &quot;deviationStr&quot;: &quot;&quot;,&#xd;
          &quot;hasReport&quot;: true&#xd;
      },&#xd;
      &quot;report&quot;: {&#xd;
          &quot;id&quot;: 36218,&#xd;
          &quot;orderNo&quot;: 1811021011000,&#xd;
          &quot;reportNo&quot;: &quot;&quot;,&#xd;
          &quot;createId&quot;: &quot;验布师1&quot;,&#xd;
          &quot;rowNo&quot;: 1,&#xd;
          &quot;rollCode&quot;: &quot;618110210110000002&quot;,&#xd;
          &quot;reportName&quot;: &quot;0002&quot;,&#xd;
          &quot;inner_url&quot;: &quot;http://img.lianshang.cn/data/common/201810/5/2801_1540975886170.png&quot;,&#xd;
          &quot;reportStatus&quot;: 0,&#xd;
          &quot;outer_url&quot;: &quot;http://img.lianshang.cn/data/common/201810/5/1675_1540975888102.png&quot;,&#xd;
          &quot;downMachine&quot;:true,&#xd;
          &quot;confirm&quot;:true,&#xd;
          &quot;categoryName&quot;:&quot;雪花呢&quot;,&#xd;
          &quot;innerCategoryCode&quot;:232&#xd;
          },&#xd;
      &quot;reportDetail&quot;: {&#xd;
          &quot;id&quot;: 36184,&#xd;
          &quot;createId&quot;: &quot;验布师1&quot;,&#xd;
          &quot;batchNo&quot;: &quot;618110210110000002&quot;,&#xd;
          &quot;checker&quot;: &quot;海&quot;,&#xd;
          &quot;reportNo&quot;: &quot;&quot;,&#xd;
          &quot;fullWidth&quot;: 13.00,&#xd;
          &quot;availableWidth&quot;: 13.00,&#xd;
          &quot;length&quot;: 13.00,&#xd;
          &quot;rollWeight&quot;: 13.00,&#xd;
          &quot;meterWeight&quot;: 13.00,&#xd;
          &quot;squareMeterWeight&quot;: 13.00,&#xd;
          &quot;expectFullWidth&quot;: 13.00,&#xd;
          &quot;expectAvailableWidth&quot;: 13.00,&#xd;
          &quot;expectLength&quot;: 13.00,&#xd;
          &quot;expectRollWeight&quot;: 13.00,&#xd;
          &quot;expectMeterWeight&quot;: 13.00,&#xd;
          &quot;expectSquareMeterWeight&quot;: 13.00,&#xd;
          &quot;wrapSteamShrinkage&quot;: 13.00,&#xd;
          &quot;zonalSteamShrinkage&quot;: 13.00,&#xd;
          &quot;wrapWashingShrinkage&quot;: 13.00,&#xd;
          &quot;zonalWashingShrinkage&quot;: 0.00,&#xd;
          &quot;customerMarkFlawNumber&quot;: 0,&#xd;
          &quot;actualFlawNumber&quot;: 2,&#xd;
          &quot;actualContinuousFlawNumber&quot;: 0,&#xd;
          &quot;frontFlawNumber&quot;: 1,&#xd;
          &quot;backFlawNumber&quot;: 1,&#xd;
          &quot;resultStatistics&quot;: &quot;色纱:1个|污渍:1个&quot;,&#xd;
          &quot;resultRemark&quot;: &quot;&quot;,&#xd;
          &quot;resultStatisticList&quot;: [&quot;色纱:1个&quot;, &quot;污渍:1个&quot;],&#xd;
          &quot;color&quot;: &quot;红色&quot;,&#xd;
          &quot;totalScore&quot;: 4.00,&#xd;
          &quot;deductRate&quot;: 236.69,&#xd;
          &quot;scoreFlawNumList&quot;: [{&#xd;
            &quot;score&quot;: 0,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 1,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 2,&#xd;
            &quot;flawNum&quot;: 2&#xd;
          }, {&#xd;
            &quot;score&quot;: 3,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }, {&#xd;
            &quot;score&quot;: 4,&#xd;
            &quot;flawNum&quot;: 0&#xd;
          }],&#xd;
          &quot;resultJudge&quot;: &quot;&quot;,&#xd;
          &quot;resultJudgeType&quot;: 1,&#xd;
          &quot;fitDeliveryStandard&quot;: 1,&#xd;
          &quot;otherDesc&quot;: &quot;&quot;,&#xd;
          &quot;safeLength&quot;: 0.00,&#xd;
          &quot;safeWeight&quot;: 0.00,&#xd;
          &quot;fullFlawPicUrls&quot;: [],&#xd;
          &quot;checkResultJudgeType&quot;: 0,&#xd;
          &quot;paperTube&quot;: 13.00,&#xd;
          &quot;expectPaperTube&quot;: 0.00,&#xd;
          &quot;deviation&quot;: 0.00,&#xd;
          &quot;deviationType&quot;: 0&#xd;
      },&#xd;
      &quot;reportFlaws&quot;: [{&#xd;
          &quot;id&quot;: 62283,&#xd;
          &quot;flawPos&quot;: 2.00,&#xd;
          &quot;flawType&quot;: 3,&#xd;
          &quot;flawName&quot;: &quot;色纱&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;reportId&quot;: &quot;&quot;,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 2,&#xd;
          &quot;fullFlaw&quot;: 0,&#xd;
          &quot;cutOff&quot;: false,&#xd;
          &quot;isCutOff&quot;: false&#xd;
        }, {&#xd;
          &quot;id&quot;: 62284,&#xd;
          &quot;flawPos&quot;: 5.00,&#xd;
          &quot;flawType&quot;: 6,&#xd;
          &quot;flawName&quot;: &quot;污渍&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;reportId&quot;: &quot;&quot;,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 2,&#xd;
          &quot;fullFlaw&quot;: 0,&#xd;
          &quot;cutOff&quot;: false,&#xd;
          &quot;isCutOff&quot;: false&#xd;
        }],&#xd;
        &quot;reportFullFlaws&quot;: [{&#xd;
          &quot;id&quot;: 62285,&#xd;
          &quot;flawPos&quot;: 0.00,&#xd;
          &quot;flawType&quot;: 2,&#xd;
          &quot;flawName&quot;: &quot;折/皱痕&quot;,&#xd;
          &quot;cutOffLength&quot;: 0.00,&#xd;
          &quot;reportId&quot;: &quot;&quot;,&#xd;
          &quot;flawPicUrls&quot;: [],&#xd;
          &quot;score&quot;: 0,&#xd;
          &quot;fullFlaw&quot;: 1,&#xd;
          &quot;cutOff&quot;: false,&#xd;
          &quot;isCutOff&quot;: false&#xd;
        }]&#xd;
     }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/check/down</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取打印信息单--已出库" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: {&#xd;
        &quot;orderNo&quot;:&quot;1802272011000&quot;&#xd;
    }&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/print-info</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">订单号</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取打印二维码信息--已出库" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;:{&#xd;
    &quot;rollCode&quot;:&quot;818013120110000001&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order-roll/print-qr-info</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取打印物流单200" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: {&#xd;
        &quot;orderNo&quot;:&quot;1811031011001&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/print-logistics-info</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取打印物流单-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: {&#xd;
        &quot;orderNo&quot;:&quot;180227201100&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/order/print-logistics-info</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取验布订单列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="draw" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">21</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">draw</stringProp>
                  </elementProp>
                  <elementProp name="sortColumn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">o.create_time</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sortColumn</stringProp>
                  </elementProp>
                  <elementProp name="sortDir" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">asc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sortDir</stringProp>
                  </elementProp>
                  <elementProp name="start" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">start</stringProp>
                  </elementProp>
                  <elementProp name="limit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">20</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">limit</stringProp>
                  </elementProp>
                  <elementProp name="where" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &quot;rules&quot;:[{&quot;field&quot;:&quot;o.create_time&quot;,&quot;value&quot;:&quot;2017-10-25 00:00 - 2019-11-06 23:59&quot;,&quot;op&quot;:&quot;between&quot;},{&quot;field&quot;:&quot;orderRoll.roll_code&quot;,&quot;value&quot;:&quot;&quot;,&quot;op&quot;:&quot;equal&quot;},{&quot;field&quot;:&quot;o.`order_no`&quot;,&quot;value&quot;:&quot;&quot;,&quot;op&quot;:&quot;equal&quot;},{&quot;field&quot;:&quot;o.buyer_name&quot;,&quot;value&quot;:&quot;&quot;,&quot;op&quot;:&quot;like&quot;},             {&quot;field&quot;:&quot;orderAddress.buyer_name&quot;,&quot;value&quot;:&quot;&quot;,&quot;op&quot;:&quot;like&quot;}           ],         &quot;groups&quot;:[],         &quot;op&quot;:&quot;and&quot;     }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">where</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/order-roll/list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">唯一卷</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${sharpurl}:${sharpport}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="usertoken" elementType="Header">
                    <stringProp name="Header.name">usertoken</stringProp>
                    <stringProp name="Header.value">7e2ac3f69b0ea89395ec4b5c05a0477e209eee17a63baa44f8e3ddc733e30e7e</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-121948827">{
    &quot;recordsTotal&quot;:2,
    &quot;data&quot;: [
        {
            &quot;id&quot;:7824,
            &quot;rollCode&quot;:&quot;1810301011000&quot;, //唯一码
            &quot;orderNo&quot;:&quot;&quot;, //验布单号
            &quot;customerName&quot;:&quot;&quot;, //客户
            &quot;boyName&quot;:&quot;&quot;, //理单员
            &quot;status&quot;:1, //状态
            &quot;statusName&quot;:&quot;xxx&quot;, //状态
            &quot;clothReport&quot;:{
                &quot;innerUrl&quot;:&quot;&quot;,//内部报告
                &quot;outer_url&quot;:&quot;&quot;//外部报告
            }
        }
    ],
    &quot;code&quot;:200,
    &quot;message&quot;:&quot;成功&quot;,
    &quot;success&quot;:true
}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="用表格察看结果" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </HTTPSamplerProxy>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
